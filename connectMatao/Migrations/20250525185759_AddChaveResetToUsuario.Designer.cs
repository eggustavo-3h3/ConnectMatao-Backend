// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using connectMatao.Data.Context;

#nullable disable

namespace connectMatao.Migrations
{
    [DbContext(typeof(ConnectMataoContext))]
    [Migration("20250525185759_AddChaveResetToUsuario")]
    partial class AddChaveResetToUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("connectMatao.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TB_Categoria", (string)null);
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("Categoriaid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FaixaEtaria")
                        .HasColumnType("int");

                    b.Property<bool>("FlagAprovado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("UsuarioParceiroid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Categoriaid");

                    b.HasIndex("UsuarioParceiroid");

                    b.ToTable("TB_Evento", (string)null);
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.EventoEstatisticas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Eventoid")
                        .HasColumnType("char(36)");

                    b.Property<int>("TipoEstatistica")
                        .HasColumnType("int");

                    b.Property<Guid>("Usuarioid")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Eventoid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("TB_EventoEstatistica", (string)null);
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.EventoImagens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("TB_EventoImagens", (string)null);
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChaveReset")
                        .HasColumnType("char(36)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("TB_Usuario", (string)null);
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.Evento", b =>
                {
                    b.HasOne("connectMatao.Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("connectMatao.Domain.Entities.Usuario", "UsuarioParceiro")
                        .WithMany()
                        .HasForeignKey("UsuarioParceiroid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("UsuarioParceiro");
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.EventoEstatisticas", b =>
                {
                    b.HasOne("connectMatao.Domain.Entities.Evento", "Evento")
                        .WithMany("Estatisticas")
                        .HasForeignKey("Eventoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("connectMatao.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.EventoImagens", b =>
                {
                    b.HasOne("connectMatao.Domain.Entities.Evento", "Evento")
                        .WithMany("EventoImagens")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("connectMatao.Domain.Entities.Evento", b =>
                {
                    b.Navigation("Estatisticas");

                    b.Navigation("EventoImagens");
                });
#pragma warning restore 612, 618
        }
    }
}
